
//version = '1.4.0301'

buildscript {
//    repositories {
//        mavenCentral()
//    }
    //So when you want to use a library in the build script itself, you must add this library on the script classpath using buildScript:
    //https://docs.gradle.org/current/userguide/plugins.html#sec:applying_plugins_buildscript
    dependencies {
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.28.0'
    }
}

plugins {
    id "com.vanniktech.maven.publish" version "0.28.0" //apply false
}


import com.vanniktech.maven.publish.SonatypeHost
//
////https://vanniktech.github.io/gradle-maven-publish-plugin/central/#secrets
//// Automatic release: publishAndReleaseToMavenCentral --no-configuration-cache
//// Manual release:  publishToMavenCentral --no-configuration-cache
mavenPublishing {
//    publishToMavenCentral(SonatypeHost.DEFAULT)
//    // or when publishing to https://s01.oss.sonatype.org
//    publishToMavenCentral(SonatypeHost.S01)
//    // or when publishing to https://central.sonatype.com/
    // 不自动发布，先发布到
    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL,false)

    signAllPublications()

//    coordinates("com.example.mylibrary", "library-name", "1.0.3-SNAPSHOT")


    pom {
        name = "rocketmq-client-aot-graalvm"
        description = "A rocketmq client 5.0 with GraalVM Native Image Support (AOT) ."
        inceptionYear = "2024"
        url = "https://github.com/martin2038/rocketmq-clients"
        licenses {
            license {
                name = "The Apache License, Version 2.0"
                url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                distribution = "http://www.apache.org/licenses/LICENSE-2.0.txt"
            }
        }
        developers {
            developer {
                id = "martin2038"
                name = "Martin Cong"
                url = "https://github.com/martin2038/"
                email = "cyy2cyy@gmail.com"
            }
        }
        scm {
            url = "https://github.com/martin2038/rocketmq-clients"
            connection = "scm:git:git://github.com/martin2038/rocketmq-clients.git"
            developerConnection = "scm:git:ssh://github.com/martin2038/rocketmq-clients.git"
        }
    }
}



//apply from: "$rootProject.projectDir/central.gradle"

dependencies {
//    api "com.bt.rpc:rpc-api:$rpcVersion"
//
//    api "jakarta.validation:jakarta.validation-api:3.0.2"
//    compileOnly "org.projectlombok:lombok:${lombokVersion}"
//    compileOnly "com.fasterxml.jackson.core:jackson-annotations:2.16.1"

//    api project(":client-apis")
    api "org.apache.rocketmq:rocketmq-client-apis:5.0.6"
    // override guava from rocketmq-client-apis
    api("com.google.guava:guava:33.1.0-jre")
    implementation "org.slf4j:slf4j-api:1.7.36"

    implementation('org.apache.rocketmq:rocketmq-proto:2.0.3'){
        exclude(module:'grpc-netty-shaded')
    }
    implementation "io.netty:netty-handler:$nettyGrpcVersion"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation 'com.google.protobuf:protobuf-java:3.25.3'
//    implementation 'com.google.protobuf:protobuf-javalite:3.25.3'

//    https://github.com/grpc/grpc-java/issues/11015
//    implementation("com.google.protobuf:protobuf-java-util:3.25.3"){
//        exclude(module: "gson")
//        exclude(module: "j2objc-annotations")
//    }

//    implementation 'io.opentelemetry:opentelemetry-api:1.36.0'
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'net.javacrumbs.future-converter:future-converter-java8-guava:1.2.0'

    // native
    compileOnly 'org.graalvm.sdk:nativeimage:24.0.0'


    //不需要的依赖
    compileOnly ('ch.qos.logback:logback-classic:1.5.3'){
        exclude(module: 'slf4j-api')
    }
    compileOnly 'io.opentelemetry:opentelemetry-sdk:1.36.0'
    compileOnly 'io.opentelemetry:opentelemetry-exporter-otlp-metrics:1.14.0'

    testImplementation("junit:junit:4.13.2")
    testImplementation("org.mockito:mockito-core:5.11.0")
    testImplementation("org.awaitility:awaitility:4.2.1")


    testImplementation ('ch.qos.logback:logback-classic:1.5.3'){
        exclude(module: 'slf4j-api')
    }
    testImplementation("io.opentelemetry:opentelemetry-sdk:1.36.0")
    testImplementation("io.opentelemetry:opentelemetry-exporter-otlp-metrics:1.14.0")
}